= link_to 'Go Back Home', root_path

h1.text-center About this Case Study

p
  'This case study shows how the Authz can be used to support the authorization needs of an on-demand taxi
  ' application with operations in different cities (like Uber or Didi).

p We chose this case study because:
ul
  li
    'Two-sided marketplaces are a very common use case for web applications.
    ' We hope this case study becomes valuable and relatable documentation for the gem.

  li
    'Most developers are familiar with Uber-like apps, reducing the overhead required to understand the
    ' case study and allowing them to focus on the libraryâ€™s features.
  li
    ' The scenario is rich enough to allow the demonstrations of most of the library features.

h2 Role Descriptions
p The case study contains the following role descriptions:
table
  thead
    th Role
    th Permitted Activities
  tbody
    = render 'role_description', role: 'Client',
            descriptions: ['Create, Read and update their client profile.',
                           'Request, list and cancel services for themselves in any city where they request them.']

    = render 'role_description', role: 'Driver',
            descriptions: ['List, accept, reject, finish services that are automatically assigned to them based on their position.',
                           'Create, read and update their driver profile.']

    = render 'role_description', role: 'City Analyst',
            descriptions: ['All of the following must be limited to the city they have been assigned to:',
                    'List and view the profiles of clients that have requested a service in their city.',
                    'List the services that have taken place in their city.',
                    'Cancel a service on behalf of the client (but not request).',
                    'Reject and finish a service on behalf of the driver (but not accept).',
                    'List and view the profiles of drivers that have provided a service in their city.']

    = render 'role_description', role: 'City Manager',
            descriptions: ['All of the following must be limited to the city they have been assigned to:',
                    'List, view and edit the profiles of clients that have requested a service in their city.',
                    'List the services that have taken place in their city.',
                    'Cancel a service on behalf of the client (but not request).',
                    'Reject and finish a service on behalf of the driver (but not accept).',
                    'List, view and edit the profiles of drivers that have provided a service in their city.']

    = render 'role_description', role: 'General Manager',
            descriptions: ['List, view and edit the profiles of any client.',
                    'List all the services that have been requested',
                    'Cancel a service on behalf of the client (but not request).',
                    'Reject and finish a service on behalf of the driver (but not accept).',
                    'List, view and edit the profiles of any driver.',
                    'Start operations of the company in a city by creating it (i.e. create, read, update, delete cities).']

    = render 'role_description', role: 'Authorization Admin',
            descriptions: ['Create staff member accounts for new employees of the company (i.e. create, read, update, delete staff member accounts).',
                    'Manage the authorization inside the platform which includes modifying the roles for staff members and create new roles if deemed necessary by the general manager.']

strong Additional Requirements
ul
  li The same staff member should be able to work as a city analyst or a city manager in two different cities.

= link_to 'Go Back Home', root_path